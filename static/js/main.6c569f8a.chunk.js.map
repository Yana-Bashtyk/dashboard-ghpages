{"version":3,"sources":["appData.js","appSelect.js","App.js","index.js"],"names":["AppData","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","status","data","map","value","resultStudent","tasks","index","react_default","a","createElement","key","className","title","href","url","target","rel","style","color","task","selectedOption","git","mentor","filter","el","github","localStorage","getItem","studentGit","i","Table","borderCollapse","fontSize","margin","padding","paddingTop","score","Component","AppSelect","toggleSearchable","setState","state","isSearchable","mentors","names","label","maxWidth","react","react_select_esm","name","options","onChange","App","handleChange","setItem","toggle","bind","assertThisInitialized","isOpen","info","taskList","Navbar","dark","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","Container","Row","Col","appSelect","appData","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6c569f8a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Table } from 'reactstrap';\r\n\r\nclass AppData extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.status = this.props.data.map((value => value.status));\r\n  }\r\n\r\n  static getClassName(status, score) {\r\n    if (score) return 'checked';\r\n      switch (status) {\r\n        case 'checked': {\r\n          return 'unchecked';\r\n        }\r\n        case 'checking': {\r\n          return 'checking';\r\n        }\r\n        case 'todo': {\r\n          return 'todo';\r\n        }\r\n        case 'in-progress': {\r\n          return 'in-progress';\r\n        }\r\n        default: {\r\n          return 'todo'\r\n        }\r\n      }\r\n    }\r\n  \r\n  render() {\r\n\r\n    let tasks = this.props.data.map((value, index) => {\r\n      return (\r\n          <tr key={index}>\r\n            <td className={value.status} title={value.status}>\r\n              <a \r\n              href={value.url} \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\"\r\n              style={{ color: '#343a40' }}>\r\n                {value.task}\r\n              </a> \r\n            </td> \r\n          </tr>\r\n      )\r\n    });\r\n\r\n    const selected = this.props.selectedOption;\r\n\r\n    let resultStudent;\r\n    \r\n    if(selected) {\r\n      resultStudent = this.props.mentor\r\n      .filter(el => el.github === localStorage.getItem('selectedItem'))\r\n      .map(el => el['studentList']);\r\n      \r\n      let git = resultStudent[0].map(el => el.studentGit);\r\n\r\n      resultStudent = git.map((el, i) => {\r\n        return (\r\n          <td key={i}>\r\n          <a href={'https://github.com/' + el} \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\"\r\n            style={{ color: '#343a40' }}>{el}\r\n          </a>\r\n          </td>\r\n        )});    \r\n      \r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"Table\">\r\n        <div>\r\n          <h2>Tasks</h2>\r\n          <Table  style={{ borderCollapse: 'initial',\r\n            fontSize: '16px',\r\n            margin: '0',\r\n            padding: '5px' }}>\r\n            <thead>\r\n              <tr>\r\n                <td style={{ paddingTop: '36px' }}>\r\n                </td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {tasks}\r\n            </tbody>\r\n          </Table>\r\n      </div>\r\n      <div>\r\n        <h2>Students</h2>\r\n        <Table \r\n          style={{ borderCollapse: 'initial',\r\n          fontSize: '16px',\r\n          margin: '0',\r\n          padding: '5px' }}>\r\n          <thead>\r\n            <tr>\r\n              {resultStudent}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          </tbody>\r\n          </Table>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppData;\r\n","import React, { Component, Fragment } from 'react';\r\nimport Select from 'react-select'\r\n\r\nclass AppSelect extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSearchable: true\r\n    };\r\n    }\r\n    //state \r\n\r\n    toggleSearchable = () =>\r\n    this.setState(state => ({ isSearchable: !state.isSearchable }));\r\n\r\n\r\n  render() {\r\n    const {\r\n      isSearchable\r\n    } = this.state;\r\n\r\n    let mentors = this.props.mentor.map((value) => {\r\n      const names = {};\r\n      names.value = value.github;\r\n      names.label = value.github;\r\n      return (\r\n        names\r\n      )\r\n  });\r\n    return(\r\n      <div style={{ maxWidth: '300px' }}>\r\n      <h2>\r\n        Mentor:\r\n      </h2>\r\n      <Fragment>\r\n        <Select\r\n          value={this.props.selectedOption}\r\n          isSearchable={isSearchable}\r\n          name=\"mentor\"\r\n          options={mentors}\r\n          onChange={this.props.onChange}\r\n        />\r\n      </Fragment>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AppSelect;\r\n","import React, { Component } from 'react';\r\nimport AppData from './appData';\r\nimport AppSelect from './appSelect';\r\nimport './App.css';\r\nimport info from './nodejs-script/data.json';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  Row,\r\n  Col,\r\n} from 'reactstrap';\r\n\r\nimport { Container } from 'reactstrap';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false,\r\n      data: [],\r\n      mentor: [],\r\n      \r\n    };\r\n\r\n  }\r\n  state = {selectedOption: null}\r\n  handleChange = (selectedOption) => {\r\n    this.setState({ selectedOption });\r\n    localStorage.setItem('selectedItem', selectedOption.value);\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      data: info.taskList,\r\n      mentor: info.mentors\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      selectedOption\r\n    } = this.state;\r\n\r\n   \r\n    return (\r\n      <div>\r\n        <Navbar color=\"dark\" dark expand=\"md\">\r\n          <NavbarBrand href=\"/\">Mentor Dashboard</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n        <Container style={{ margin: '20px' }}>\r\n          <Row>\r\n            <Col >\r\n              <AppSelect \r\n              mentor = {this.state.mentor} \r\n              selectedOption={selectedOption}\r\n              onChange = {this.handleChange}/>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <AppData \r\n              data = {this.state.data} \r\n              mentor = {this.state.mentor}\r\n              selectedOption={selectedOption}\r\n              onChange = {this.handleChange}\r\n              />\r\n            </Col>\r\n            \r\n          </Row>\r\n        </Container>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />, \r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}